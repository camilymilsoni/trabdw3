{% extends "templates/base.html" %}

{% block content %}

  <div class="card shadow border-2 border-dark-subtle mt-5" x-data="funcionarioForm()">
    <div class="card-header">
      <div class="d-flex justify-content-center align-items-center text-center">
        <h3 class="my-2 text-uppercase">{{ title }}</h3>
      </div>
    </div>
    <div class="card-body">
      <div class="mx-4">
        <div class="row my-2">
          <div class="col-12">
            <div>
              <form>
                <div class="row">
                  <div class="col-md-3">
                    <div class="form-group">
                      <label for="nome_funcionario" class="mb-2">Nome</label>
                      <input type="text" class="form-control" id="nome_funcionario" x-model="form.nome_funcionario" required="required" x-bind:disabled="disabled">
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="form-group">
                      <label for="salario_funcionario" class="mb-2">Salário</label>
                      <div class="input-group">
                        <span class="input-group-text" id="basic-addon1">R$</span>
                        <input type="number" class="form-control" id="salario_funcionario" x-model="form.salario_funcionario" required aria-describedby="basic-addon1" x-bind:disabled="disabled">
                      </div>
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="form-group">
                      <label for="cargo_funcionario" class="mb-2">Cargo</label>
                      <input type="text" class="form-control" id="cargo_funcionario" x-model="form.cargo_funcionario" required="required" x-bind:disabled="disabled">
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="form-group">
                      <label for="datacontratacao_funcionario" class="mb-2">Data Contratação</label>
                      <input type="date" class="form-control" id="datacontratacao_funcionario" x-model="form.datacontratacao_funcionario" required="required" x-bind:disabled="disabled">
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="form-group">
                        <label for="id_empresa" class="mb-2">Empresa</label>
                        <select class="form-select" aria-label="Select" id="id_empresa" x-model="form.id_empresa" name="id_empresa" x-bind:disabled="disabled">
                            <option value="" disabled selected>Selecione...</option>                                    
                            {% for reg in empresa %}
                                {% if (data.id_empresa === reg.id_empresa) %}                                    
                                    <option value="{{reg.id_empresa}}">{{reg.nome_empresa}}</option>
                                {% else %}
                                    <option value="{{reg.id_empresa}}">{{reg.nome_empresa}}</option>
                                {% endif %}
                            {%endfor%}
                        </select>
                    </div>
                  </div>
                </div>
                <div class="mt-4">
                  <button type="button" @click="updateForm()" class="btn" style="background-color: var(--blue-color); color: white !important;">Salvar</button>
                  <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger">Desativar Funcionário</button>
                  <a href="/Funcionarios/ManutFuncionarios" class="btn btn-secondary" role="button" aria-disabled="true">Retornar</a>
                </div>
              </form>
              <div class="mt-2">
                <template x-if="message">
                  <div :class="messageClass" x-text="message"></div>
                </template>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    window.onload = function () {
      windowOnLoad();
      const localErro = "{{erro}}";
      if (localErro != "") {
        alert("[vwFuncionarios|onload] Servidor retornou o erro:" + localErro);
      }
        $("#nome_funcionario").focus();
    };

    function funcionarioForm() {
      return {
          form: {
            id_funcionario: "{{data.id_funcionario}}",
            nome_funcionario: "{{data.nome_funcionario}}",
            salario_funcionario: "{{data.salario_funcionario}}",
            cargo_funcionario: "{{data.cargo_funcionario}}",
            datacontratacao_funcionario: "{{data.datacontratacao_funcionario}}",
            removido_funcionario: false,
            id_empresa: "{{data.id_empresa}}"
          },
          message: '',
          messageClass: '',
          disabled: {{disabled}},

          async updateForm() {
            try {
              const response = await fetch('/Funcionarios/UpdateFuncionarios', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Funcionário atualizado com sucesso");
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível atualizar os dados do funcionário devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          async deleteForm() {
            try {
              console.log("Valor na página:", JSON.stringify(this.form.contaid))
              const response = await fetch('/Funcionarios/DeleteFuncionarios', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Funcionário desativado com sucesso!");
                window.location.href = "/Funcionarios/ManutFuncionarios";
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível desativar o funcionário devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          resetForm() {
            this.form = {
              nome_funcionario: '',
              salario_funcionario: '',
              cargo_funcionario: '',
              datacontratacao_funcionario: '',
              removido_funcionario: false,
              id_empresa: ''
            };
            this.message = false;
          }
        };
      }
  </script>

{% endblock %}