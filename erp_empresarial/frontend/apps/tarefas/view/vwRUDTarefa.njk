{% extends "templates/base.html" %}

{% block content %}

  <div class="card shadow border-2 border-dark-subtle mt-5" x-data="tarefaForm()">
    <div class="card-header">
      <div class="d-flex justify-content-center align-items-center text-center">
        <h3 class="my-2 text-uppercase">{{ title }}</h3>
      </div>
    </div>
    <div class="card-body">
      <div class="mx-4">
        <div class="row my-2">
          <div class="col-12">
            <div>
              <form>
                <div class="row">
                  <div class="col-md-3">
                    <div class="form-group">
                      <label for="titulo_tarefa" class="mb-2">Título</label>
                      <input type="text" class="form-control" id="titulo_tarefa" x-model="form.titulo_tarefa" required="required" x-bind:disabled="disabled">
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="form-group">
                      <label for="descricao_tarefa" class="mb-2">Descrição</label>
                      <input type="text" class="form-control" id="descricao_tarefa" x-model="form.descricao_tarefa" required="required" x-bind:disabled="disabled">
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="form-group">
                      <label for="datacriacao_tarefa" class="mb-2">Data de Criação</label>
                      <input type="date" class="form-control" id="datacriacao_tarefa" x-model="form.datacriacao_tarefa" required="required" x-bind:disabled="disabled">
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="form-group">
                      <label for="prioridade_tarefa" class="mb-2">Prioridade</label>
                      <input type="number" class="form-control" id="prioridade_tarefa" x-model="form.prioridade_tarefa" required="required" x-bind:disabled="disabled" min="1" max="10">
                    </div>
                  </div>
                </div>
                <div class="mt-4">
                  <button type="button" @click="updateForm()" class="btn" style="background-color: var(--blue-color); color: white !important;">Salvar</button>
                  <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger">Excluir Tarefa</button>
                  <a href="/Tarefas/ManutTarefas" class="btn btn-secondary" role="button" aria-disabled="true">Retornar</a>
                </div>
              </form>
              <div class="mt-2">
                <template x-if="message">
                  <div :class="messageClass" x-text="message"></div>
                </template>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    window.onload = function () {
      windowOnLoad();
      const localErro = "{{erro}}";
      if (localErro != "") {
        alert("[vwTarefas|onload] Servidor retornou o erro:" + localErro);
      }
        $("#titulo_tarefa").focus();
    };

    function tarefaForm() {
      return {
          form: {
            id_tarefa: "{{data.id_tarefa}}",
            titulo_tarefa: "{{data.titulo_tarefa}}",
            descricao_tarefa: "{{data.descricao_tarefa}}",
            datacriacao_tarefa: "{{data.datacriacao_tarefa}}",
            prioridade_tarefa: "{{data.prioridade_tarefa}}",
            removido_tarefa: false
          },
          message: '',
          messageClass: '',
          disabled: {{disabled}},

          async updateForm() {
            try {
              const response = await fetch('/Tarefas/UpdateTarefas', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Tarefa atualizada com sucesso");
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível atualizar os dados da tarefa devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          async deleteForm() {
            try {
              console.log("Valor na página:", JSON.stringify(this.form.contaid))
              const response = await fetch('/Tarefas/DeleteTarefas', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Tarefa excluída com sucesso!");
                window.location.href = "/Tarefas/ManutTarefas";
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível excluir a tarefa devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          resetForm() {
            this.form = {
              titulo_tarefa: '',
              descricao_tarefa: '',
              datacriacao_tarefa: '',
              prioridade_tarefa: '',
              removido_tarefa: false
            };
            this.message = false;
          }
        };
      }
  </script>

{% endblock %}